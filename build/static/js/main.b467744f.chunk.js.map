{"version":3,"sources":["services/contacts.js","components/contact.js","components/filter.js","components/contactForm.js","App.js","index.js"],"names":["baseURL","services_contacts","axios","get","then","response","data","newContact","post","id","put","concat","contact","delete","Contact","_ref","deleteContact","react_default","a","createElement","key","name","number","onClick","Contacts","_ref2","contacts","filter","filteredContacts","toLocaleLowerCase","includes","map","contact_Contact","Filter","handleFilter","value","onChange","ContactForm","props","onSubmit","addcontact","newName","handleNameChange","newNumber","handleNumberChange","type","Notification","message","notificationStyle","color","style","background","fontSize","borderStyle","borderSadius","padding","marginBottom","App","_useState","useState","_useState2","Object","slicedToArray","setContacts","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","notification","setNotification","_useState11","_useState12","isError","setIsError","useEffect","contactsService","catch","error","handleNotification","setTimeout","App_Notification","components_filter","event","target","contactForm","preventDefault","length","window","confirm","oldContact","find","c","components_contact","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b467744f.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseURL = '/api/contacts'\n\nconst getContacts = () => {\n    const request = axios.get(baseURL)\n    return request.then(response => response.data)\n}\n\nconst createContact = (newContact) => {\n    const request = axios.post(baseURL, newContact)\n    return request.then(response => response.data)\n}\n\nconst updateContact = (id, newContact) => {\n    const request = axios.put(`${baseURL}/${id}`, newContact)\n    return request.then(response => response.data)\n}\n\nconst deleteContact = (contact) => {\n    return axios.delete(`${baseURL}/${contact.id}`)\n}\n \n\nexport default { getContacts, createContact, updateContact, deleteContact}","import React from 'react'\n\nconst Contact = ({ contact, deleteContact }) => {\n    return (\n        <li key={contact.name}>\n            {contact.name}{' '}\n            {contact.number}{' '}\n            <button onClick={() => deleteContact(contact)}>poista</button>\n        </li>\n    )\n}\n\nconst Contacts = ({ contacts, filter, deleteContact }) => {\n    let filteredContacts = contacts.filter(contact => contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()))\n    return (\n        <ul>\n            {filteredContacts.map(contact =>\n                <Contact\n                    key={contact.name}\n                    contact={contact}\n                    deleteContact={deleteContact} />)}\n        </ul>\n    )\n}\n\n\n\nexport default Contacts","import React from 'react'\n\nconst Filter = ({ filter, handleFilter }) => {\n    return (\n        <div>\n            rajaa näytettäviä <input value={filter} onChange={handleFilter} />\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst ContactForm = props => {\n    return (\n        <form onSubmit={props.addcontact}>\n            <div>\n                nimi: <input value={props.newName} onChange={props.handleNameChange} />\n            </div>\n            <div>numero: <input value={props.newNumber} onChange={props.handleNumberChange} /></div>\n            <div>\n                <button type=\"submit\">lisää</button>\n            </div>\n        </form>\n    )\n}\n\nexport default ContactForm","import React, { useState, useEffect } from 'react'\nimport contactsService from './services/contacts'\nimport Contacts from './components/contact'\nimport Filter from './components/filter'\nimport ContactForm from './components/contactForm'\n\nconst Notification = ({ message, style }) => {\n    const notificationStyle = {\n        color: style ? 'red' : 'green',\n        background: 'lightgrey',\n        fontSize: '20px',\n        borderStyle: 'solid',\n        borderSadius: '5px',\n        padding: '10px',\n        marginBottom: '10px'\n    }\n\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div style={notificationStyle}>\n            {message}\n        </div>\n    )\n}\n\nconst App = () => {\n    const [contacts, setContacts] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filter, setFilter] = useState('')\n    const [notification, setNotification] = useState(null)\n    const [isError, setIsError] = useState(false)\n\n    useEffect(() => {\n        contactsService\n            .getContacts()\n            .then(contacts => setContacts(contacts))\n            .catch(error => {\n                handleNotification('Error')\n                setIsError(true)\n            })\n    }, [])\n\n    const handleNotification = (message) => {\n        setNotification(message)\n        setTimeout(() => {\n            setNotification(null)\n        }, 2000)\n    }\n\n    const addcontact = (event) => {\n        event.preventDefault()\n        if (contacts.filter(contact => contact.name === newName).length) {\n            if (window.confirm(`${newName} on jo luettelossa, korvataanko vanha numero uudella?`)) {\n                let oldContact = contacts.find(contact => contact.name === newName)\n                let newContact = {\n                    \"name\": newName,\n                    \"number\": newNumber,\n                    \"id\": oldContact.id\n                }\n                contactsService.updateContact(oldContact.id, newContact)\n                    .then(response =>\n                        setContacts(contacts.map(c => c.id === oldContact.id ? newContact : c)),\n                        handleNotification(`Päivitettiin numero henkilölle ${newName}`),\n                        setIsError(false)\n                    )\n                    .catch(error => {\n                        handleNotification(`Henkilö ${oldContact.name} oli jo poistettu`)\n                        setIsError(true)\n                    })\n            }\n        } else {\n            const newContact = { 'name': newName, 'number': newNumber }\n            contactsService.createContact(newContact)\n                .then(contact =>\n                    setContacts(contacts.concat(contact)),\n                    handleNotification(`Lisättiin ${newName}`),\n                    setIsError(false)\n                )\n                .catch(error => {\n                    handleNotification(error.response.data)\n                    setIsError(true)\n                })\n        }\n    }\n\n    const deleteContact = (contact) => {\n        if (window.confirm(`Poistetaanko ${contact.name}?`)) {\n            contactsService.deleteContact(contact)\n                .then(response =>\n                    setContacts(contacts.filter(c => c.id !== contact.id)),\n                    handleNotification(`Poistettiin ${contact.name}`),\n                    setIsError(false)\n                )\n                .catch(error => {\n                    handleNotification(`Henkilöä ${contact.name} ei voitu poistaa`)\n                    setIsError(true)\n                })\n        }\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilter = (event) => {\n        setFilter(event.target.value)\n    }\n\n    return (\n        <div>\n            <h2>Puhelinluettelo</h2>\n            <Notification message={notification} style={isError} />\n            <Filter filter={filter} handleFilter={handleFilter} />\n            <h3>lisää uusi</h3>\n            <ContactForm handleNameChange={handleNameChange}\n                newName={newName}\n                handleNumberChange={handleNumberChange}\n                newNumber={newNumber}\n                addcontact={addcontact}\n            />\n            <h3>Numerot</h3>\n            <Contacts contacts={contacts} filter={filter} deleteContact={deleteContact} />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}